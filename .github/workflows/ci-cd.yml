name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd packages/core
        npm install
        cd ../components  
        npm install
        cd ../..
    
    - name: Build core package
      run: |
        cd packages/core
        npm run build
        cd ../..
    
    - name: Build components package  
      run: |
        cd packages/components
        npm run build
        ls -la dist/
        ls -la dist/cjs/
        ls -la dist/esm/
        ls -la dist/types/
        cd ../..
    
    - name: Reinstall main dependencies after package builds
      run: |
        npm install
        ls -la node_modules/@yallaling/
    
    - name: Verify package linking
      run: |
        ls -la node_modules/@yallaling/
        ls -la node_modules/@yallaling/web-ai-components/dist/
    
    - name: Run type check
      run: npm run type-check
    
    - name: Run linting
      run: npm run lint
    
    - name: Run formatting check
      run: npm run format:check
    
    - name: Run tests
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Build library
      run: npm run build
    
    - name: Build Storybook
      run: npm run build-storybook

  # Disable automatic publishing since packages are manually published
  # release:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #   
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #       registry-url: 'https://registry.npmjs.org'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Build library
  #     run: npm run build
  #   
  #   - name: Publish to npm
  #     run: npm publish
  #     env:
  #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-storybook:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd packages/core
        npm install
        cd ../components  
        npm install
        cd ../..
    
    - name: Build core package
      run: |
        cd packages/core
        npm run build
        cd ../..
    
    - name: Build components package  
      run: |
        cd packages/components
        npm run build
        ls -la dist/
        ls -la dist/cjs/
        ls -la dist/esm/
        ls -la dist/types/
        cd ../..
    
    - name: Reinstall main dependencies after package builds
      run: |
        npm install
        ls -la node_modules/@yallaling/
    
    - name: Verify package linking
      run: |
        ls -la node_modules/@yallaling/
        ls -la node_modules/@yallaling/web-ai-components/dist/
    
    - name: Build Storybook
      run: npm run build-storybook
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./storybook-static
